name: bluez
version: 5.72-0ubuntu5
type: app
summary: Bluetooth tools and daemons
description: |
 This package contains tools and system daemons for using Bluetooth
 devices. BlueZ is the official Linux Bluetooth protocol stack. It
 is an Open Source project distributed under GNU General Public
 License (GPL). See the project homepage for more details:
 https://code.launchpad.net/~snappy-hwe-team/snappy-hwe-snaps/+git/bluez
confinement: strict
grade: stable
base: core24

layout:
  /usr/var/lib/bluetooth:
    symlink: $SNAP_DATA
  /usr/etc/bluetooth:
    symlink: $SNAP_DATA/etc

apps:
  bluetoothctl:
    command: bin/client-wrapper usr/bin/bluetoothctl
    plugs: [client, uhid]
  bluez:
    command: bin/bluetoothd-wrapper
    daemon: dbus
    bus-name: org.bluez
    slots: [service, dbus-bluez]
    plugs: [uhid, uinput, kernel-crypto-api]
  hciconfig:
    command: usr/bin/hciconfig
    plugs: [bluetooth-control]
  hcidump:
    command: usr/bin/hcidump
    plugs: [bluetooth-control, network-control, home]
  hciattach:
    command: usr/bin/hciattach
    plugs: [bluetooth-control, serial-port]
  btattach:
    command: usr/bin/btattach
    plugs: [bluetooth-control, serial-port]
  hcitool:
    command: usr/bin/hcitool
    plugs: [bluetooth-control]
  sdptool:
    command: usr/bin/sdptool
    plugs: [client]
  btmon:
    command: usr/bin/btmon
    plugs: [bluetooth-control, network-control, home]
  btmgmt:
    command: usr/bin/btmgmt
    plugs: [bluetooth-control, network-control]

plugs:
  client:
    interface: bluez

slots:
  service:
    interface: bluez
  dbus-bluez:
    interface: dbus
    bus: system
    name: org.bluez

parts:

  bluez-common:
    plugin: dump
    source: bin/
    organize:
      client-wrapper: bin/client-wrapper
      bluetoothd-wrapper: bin/bluetoothd-wrapper

  changelog:
    plugin: nil
    override-build: |
      cp "$CRAFT_PROJECT_DIR"/ChangeLog "$CRAFT_PART_INSTALL"
    organize:
      ChangeLog: snap/ChangeLog

  # Get aux scripts so they can be used in other parts. Also, stage
  # packages we rebuild later to get copyright and ensure they are in
  # the manifest.
  stack-snaps-tools:
    plugin: nil
    source: https://git.launchpad.net/~snappy-hwe-team/snappy-hwe-snaps/+git/stack-snaps-tools
    source-type: git
    build-packages:
      - dpkg-dev
      - git
      - python3-docutils
    stage-packages:
      - bluez
      - bluez-hcidump
    override-build: |
      set -ex
      find "$CRAFT_PART_INSTALL"/ -type f,l \
                -not -path "$CRAFT_PART_INSTALL"/'usr/share/doc/bluez*' \
           -delete
      find "$CRAFT_PART_INSTALL"/ -type d -empty -delete
      mkdir -p "$CRAFT_PART_INSTALL"/build-tools
      cp build-tools/* "$CRAFT_PART_INSTALL"/build-tools
    prime:
      - usr/share/doc/bluez
      - usr/share/doc/bluez-hcidump

  bluez:
    after: [ stack-snaps-tools ]
    plugin: autotools
    source: https://git.launchpad.net/ubuntu/+source/bluez
    source-type: git
    source-branch: applied/ubuntu/noble
    autotools-configure-parameters:
      - --prefix=/usr
      - --libexec=/usr/lib/
      - --enable-experimental
      - --enable-threads
      - --disable-cups
      - --disable-systemd
      - --disable-silent-rules
      - --enable-test
      - --enable-deprecated
      # Set explicitly flags until lp: #1791946 is solved
      - CFLAGS='-O2 -Wl,-z,relro,-z,now -pie -fpie'
    build-packages:
      - flex
      - bison
      - libdbus-glib-1-dev
      - libglib2.0-dev
      - libcap-ng-dev
      - udev
      - libudev-dev
      - libreadline-dev
      - libical-dev
      - libjson-c-dev
      - check
      - python3-pygments
    prime:
      - usr/lib/bluetooth/bluetoothd
      - usr/bin/bluetoothctl
      - usr/bin/hciconfig
      - usr/bin/hcidump
      - usr/bin/hciattach
      - usr/bin/btattach
      - usr/bin/hcitool
      - usr/bin/sdptool
      - usr/bin/btmon
      - usr/bin/btmgmt
    override-build: |
      set -ex
      "$CRAFT_STAGE"/build-tools/check-versions bluez yes
      git config user.email "snapcraft@canonical.com"
      git config user.name "snapcraft"
      git am "$CRAFT_PROJECT_DIR"/patch/*
      craftctl default
      cp tools/btmgmt "$CRAFT_PART_INSTALL"/usr/bin/
      # Strip binaries
      find "$CRAFT_PART_INSTALL"/ -executable -type f | xargs file -Ni |
          grep 'application/x-.*executable\|application/x-.*sharedlib' | cut -d: -f1 | xargs strip
      # Run all tests shiped by default
      make check
